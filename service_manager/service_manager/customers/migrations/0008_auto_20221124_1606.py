# Generated by Django 4.1.1 on 2022-11-24 16:06

from django.db import migrations

GROUPS = {
    'FrontOffice': {
        'customer': ['view', 'add', 'change', 'delete'],
        'customer asset': ['view', 'add', 'change', 'delete'],
        'customer department': ['view', 'add', 'change', 'delete'],
        'customer representative': ['view', 'add', 'change', 'delete'],
        'service order header': ['view', 'add', 'change', 'delete'],
        'service order note': ['view', 'add', 'change', 'delete'],
        'service order detail': ['view'],
    },
    'BackOffice': {
        'service order note': ['view', 'add', 'change', 'delete'],
        'service order header': ['view', 'change'],
        'service order detail': ['view', 'add', 'change', 'delete'],
    },
    'MasterDataEditor': {
        'asset': ['view', 'add', 'change', 'delete'],
        'asset category': ['view', 'add', 'change', 'delete'],
        'brand': ['view', 'add', 'change', 'delete'],
        'customer type': ['view', 'add', 'change', 'delete'],
        'material': ['view', 'add', 'change', 'delete'],
        'material category': ['view', 'add', 'change', 'delete'],
    },
}


def apply_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    for group_name in GROUPS:
        group = Group.objects.create(
            name=group_name,
        )

        for app_model in GROUPS[group_name]:

            for permission_name in GROUPS[group_name][app_model]:
                name = f'Can {permission_name} {app_model}'
                print(f'Creating {name}')

                try:
                    model_add_perm = Permission.objects.get(name=name)
                except Permission.DoesNotExist:
                    print(f'Permission not found with name "{name}"')
                    continue

                group.permissions.add(model_add_perm)


def revert_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')

    for group_name in GROUPS:
        Group.objects.filter(
            name=group_name,
        ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("customers", "0007_alter_customer_email_address_alter_customer_name_and_more"),
    ]

    operations = [
        migrations.RunPython(apply_migration, revert_migration)
    ]
